#!/usr/bin/env bash

# Copyright © 2019-2020 Jakub Wilk <jwilk@jwilk.net>
# SPDX-License-Identifier: MIT

set -e -u
prog=${0##*/}
bad_usage()
{
    printf 'Usage: %s PROVIDER IDENT\n' "$prog" >&2
    printf 'Providers: inpost gls paczkawruchu poczta-polska\n' >&2
    exit 1
}
[ $# -eq 2 ] || bad_usage
provider="$1"
ident="$2"

curlopts=()
urlget()
{
    curl \
        "${curlopts[@]}" \
        --user-agent 'pacz (https://github.com/jwilk/pacz)' \
        --silent --fail --show-error \
        "$@"
}
useca()
{
    local cadir='/usr/share/ca-certificates/mozilla'
    local cafile="$cadir/${1}.crt"
    if [ -d "$cadir" ]
    then
        curlopts+=(--cacert "$cafile" --capath /nonexistent)
    fi
}

json2yaml()
{
    perl -m-lib=. -0777 -e '
        use strict;
        use warnings;
        use JSON::PP;
        $_ = <STDIN>;
        my $jp = JSON::PP->new->utf8->pretty;
        $_ = $jp->decode($_);
        my $use_yaml = 0;
        eval {
            require YAML::XS;
            $use_yaml = 1;
        };
        if ($use_yaml) {
            no warnings "once";
            local $YAML::XS::Boolean = "JSON::PP";
            $_ = YAML::XS::Dump($_);
            s/^---\n//;
        } else {
            $_ = $jp->encode($_);
        }
        print $_;
    '
}

case $provider in
    inpost)
        useca 'DigiCert_Global_Root_CA'
        url="https://api-shipx-pl.easypack24.net/v1/tracking/$ident"
        json=$(urlget "$url")
        json2yaml <<< "$json"
        ;;
    paczkawruchu)
        useca 'DigiCert_Global_Root_G2'
        ts=$(date '+%s000')
        url="https://nadaj.paczkawruchu.pl/parcel/api-status?id=$ident&jsonp=callback&_=$ts"
        json=$(urlget "$url")
        json=${json#callback(}
        json=${json%);}
        json=$(jq 'del(.historyHtml, .full)' <<< "$json")
        json2yaml <<< "$json"
        ;;
    poczta|poczta-polska)
        useca 'Certum_Trusted_Network_CA'
        tmpdir=$(mktemp -d -t pacz.XXXXXX)
        url="https://emonitoring.poczta-polska.pl"
        cookiejar="$tmpdir/cookies"
        urlget -c "$cookiejar" "$url" > /dev/null
        sid=$(grep -w PHPSESSID "$cookiejar" | cut -f 7)
        html=$(urlget -b "$cookiejar" -e "$url/" -d "s=$sid" -d "n=$ident" -d 'l=' "$url/wssClient.php")
        xc=0
        case $html in
            *' Brak danych o tej przesyłce '*)
                printf 'emonitoring.poczta-polska.pl: no data for %s\n' "$ident" >&2
                html=''
                xc=1
            ;;
        esac
        perl -0777 <<< "$html" -e '
            use strict;
            use warnings;
            $_ = <STDIN>;
            exit if $_ eq "\n";
            my @tables;
            s{<table\b[^>]*>(.*?)</table>}{push @tables, $1}sge;
            $_ = "@tables";
            s{<a\b[^>]*>(.*?)</a>}{$1}sg;
            s{<tr\b[^>]*>}{\n}g;
            s{<t[dh]\b[^>]*>}{ | }g;
            s{^ [|] }{}mg;
            s{</t[hdr]>}{}g;
            s{  *}{ }g;
            s{ *[|] *$}{ }mg;
            s{^\s+}{}mg;
            s{\s+$}{}mg;
            s{\n\n+}{\n}g;
            s{\n\z}{};
            print "$_\n";
        '
        rm -rf "$tmpdir"
        exit $xc
        ;;
    gls)
        useca 'GlobalSign_Root_CA'
        ts=$(date '+%s000')
        url="https://gls-group.eu/app/service/open/rest/PL/pl/rstt001?match=$ident&millis=$ts"
        json=$(urlget "$url")
        json=$(jq '.tuStatus[0] | del(.progressBar)' <<< "$json")
        json2yaml <<< "$json"
        ;;
    *)
        bad_usage;;
esac

# vim:ts=4 sts=4 sw=4 et
